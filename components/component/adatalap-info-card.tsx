/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UTUL6YxATvy
 */
import { CardContent, Card, CardHeader, CardTitle } from "@/components/ui/card";
import { HardHat } from "lucide-react";
import Link from "next/link";

export function AdatalapInfoCard({
	children,
	datas,
}: {
	children: React.ReactNode;
	datas: {
		contactName: string;
		rendszer?: string;
		status: string;
		total: string;
		accepted: string;
		adatlapId: number;
		felmero: string;
	};
}) {
	return (
		<Card className='w-full max-w-sm sticky'>
			<CardContent className='p-6 flex-col items-center space-y-4 sticky top-0'>
				{children}
				<CardHeader className='p-0 pb-2 pt-4'>
					<CardTitle>Adatok</CardTitle>
				</CardHeader>
				<div className='flex items-center space-x-4'>
					<UserCircleIcon className='h-6 w-6' />
					<div className='grid gap-0.5'>
						<h3 className='text-sm font-medium tracking-wide'>Ügyfél</h3>
						<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.contactName}</p>
					</div>
				</div>
				{datas.rendszer ? (
					<div className='flex items-center space-x-4'>
						<LayoutTemplateIcon className='h-6 w-6' />
						<div className='grid gap-0.5'>
							<h3 className='text-sm font-medium tracking-wide'>Rendszer típusa</h3>
							<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.rendszer}</p>
						</div>
					</div>
				) : null}
				<div className='flex items-center space-x-4'>
					<UserCheckIcon className='h-6 w-6' />
					<div className='grid gap-0.5'>
						<h3 className='text-sm font-medium tracking-wide'>Státusz</h3>
						<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.status}</p>
					</div>
				</div>
				<div className='flex items-center space-x-4'>
					<CurrencyIcon className='h-6 w-6' />
					<div className='grid gap-0.5'>
						<h3 className='text-sm font-medium tracking-wide'>Total</h3>
						<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.total}</p>
					</div>
				</div>
				<div className='flex items-center space-x-4'>
					<CheckCircleIcon className='h-6 w-6' />
					<div className='grid gap-0.5'>
						<h3 className='text-sm font-medium tracking-wide'>Elfogadva</h3>
						<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.accepted}</p>
					</div>
				</div>
				<div className='flex items-center space-x-4'>
					<HardHat className='h-6 w-6' />
					<div className='grid gap-0.5'>
						<h3 className='text-sm font-medium tracking-wide'>Felmérő</h3>
						<p className='text-sm text-gray-500 dark:text-gray-400'>{datas.felmero}</p>
					</div>
				</div>
				<div className='items-center p-6 pt-0 flex justify-center'>
					<Link
						className='text-sm font-medium underline p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800'
						href={"https://r3.minicrm.hu/119/#Project-23/" + datas.adatlapId}>
						Adatlap megnyitása
					</Link>
				</div>
			</CardContent>
		</Card>
	);
}

function UserCircleIcon(props: any) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'>
			<circle cx='12' cy='12' r='10' />
			<circle cx='12' cy='10' r='3' />
			<path d='M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662' />
		</svg>
	);
}

function LayoutTemplateIcon(props: any) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'>
			<rect width='18' height='7' x='3' y='3' rx='1' />
			<rect width='9' height='7' x='3' y='14' rx='1' />
			<rect width='5' height='7' x='16' y='14' rx='1' />
		</svg>
	);
}

function UserCheckIcon(props: any) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'>
			<path d='M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2' />
			<circle cx='9' cy='7' r='4' />
			<polyline points='16 11 18 13 22 9' />
		</svg>
	);
}

function CurrencyIcon(props: any) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'>
			<circle cx='12' cy='12' r='8' />
			<line x1='3' x2='6' y1='3' y2='6' />
			<line x1='21' x2='18' y1='3' y2='6' />
			<line x1='3' x2='6' y1='21' y2='18' />
			<line x1='21' x2='18' y1='21' y2='18' />
		</svg>
	);
}

function CheckCircleIcon(props: any) {
	return (
		<svg
			{...props}
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			strokeWidth='2'
			strokeLinecap='round'
			strokeLinejoin='round'>
			<path d='M22 11.08V12a10 10 0 1 1-5.93-9.14' />
			<polyline points='22 4 12 14.01 9 11.01' />
		</svg>
	);
}
